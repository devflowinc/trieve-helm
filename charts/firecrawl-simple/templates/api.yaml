apiVersion: apps/v1
kind: Deployment
metadata:
  name: firecrawl-api
  namespace: {{ .Release.Namespace }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: firecrawl-api
  template:
    metadata:
      labels:
        app: firecrawl-api
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      containers:
        - name: firecrawl-api
          image: {{ printf "trieve/firecrawl:%s" $.Values.firecrawl_tag }}
          imagePullPolicy: Always
          args: ["pnpm", "run", "start:production"]
          ports:
            - containerPort: 3002
          env:
            {{- if .Values.redisSecret.name }}
            - name: REDIS_URL
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.redisSecret.name }}
                  key: {{ .Values.redisSecret.key }}
            - name: REDIS_RATE_LIMIT_URL
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.redisSecret.name }}
                  key: {{ .Values.redisSecret.key }}
            {{- end }}
          envFrom:
            - secretRef:
                name: firecrawl-secret
          livenessProbe:
            httpGet:
              path: /v1/health/liveness
              port: 3002
            initialDelaySeconds: 0
            periodSeconds: 10
            timeoutSeconds: 1
            successThreshold: 1
            failureThreshold: 3
          readinessProbe:
            httpGet:
              path: /v1/health/readiness
              port: 3002
            initialDelaySeconds: 0
            periodSeconds: 10
            timeoutSeconds: 1
            successThreshold: 1
            failureThreshold: 3
---
apiVersion: v1
kind: Service
metadata:
  name: firecrawl-api
  namespace: {{ .Release.Namespace }}
spec:
  selector:
    app: firecrawl-api
  ports:
    - protocol: TCP
      port: 3002
      targetPort: 3002
